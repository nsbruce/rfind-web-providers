from .defaults import DEFAULT_SOCKETIO_VARS, DEFAULT_DATA_VARS, DEFAULT_S3_VARS, DEFAULT_SIM_VARS
from .utils import get_env_dir
from pathlib import Path

def main(args):

    env_dir = get_env_dir()

    # create file to write to
    with open(env_dir+'.env', 'w') as f:

        ## Set a header
        f.write('# This file is autogenerated via `python rfind_web.generate`')
        f.write('# To override these values, copy this file to .env.local') 
        f.write('# and make your overrides there')
        f.write('\n')

        if not args.exclude_sim:
            f.write('# SIMULATION')
            for key,val in DEFAULT_SIM_VARS.items():
                f.write('{}={}\n'.format(key,val))
            f.write('\n')
        if not args.exclude_sio:
            f.write('# SOCKETIO')
            for key,val in DEFAULT_SOCKETIO_VARS.items():
                f.write('{}={}\n'.format(key,val))
            f.write('\n')
        if not args.exclude_s3:
            f.write('# S3')
            for key,val in DEFAULT_S3_VARS.items():
                f.write('{}={}\n'.format(key,val))
            f.write('\n')
        if not args.exclude_data:
            f.write('# DATA')
            for key,val in DEFAULT_DATA_VARS.items():
                f.write('{}={}\n'.format(key,val))
            f.write('\n')

if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(description='Generate environment files')
    parser.add_argument('--output', type=str, default='../.env',help='path and name of .env file to write')
    parser.add_argument('--exclude-sim', type=bool, default=False, action='store_true', help='exclude sim variables from env file')
    parser.add_argument('--exclude-sio', type=bool, default=False, action='store_true', help='exclude sio variables from env file')
    parser.add_argument('--exclude-s3', type=bool, default=False, action='store_true', help='exclude s3 variables from env file')
    parser.add_argument('--exclude-data', type=bool, default=False, action='store_true', help='exclude data variables from env file')
    args = parser.parse_args()
    main(args)

